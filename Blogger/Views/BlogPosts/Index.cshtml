@model IPagedList<Blogger.Models.BlogPost>

@using PagedList;
@using PagedList.Mvc;



@{
    ViewBag.Title = "Index";
}

<!--Need for Paged List-->
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css"> 

     <!-- Section : xxx Start -->
<div class="section dark page-header" style="background: url('/Media/redbluecosmosinvert.jpg'); background-size: cover;">
    <div class="bg image overlay"></div>
    <div class="section-container">
        <div class="section-body">
            <div class="container">
                <h1 style="color: white;">Blog : <small style="color: #dedede;">Share Your Thoughts!</small></h1>

            </div>
        </div>
    </div>
</div>
<!-- // Section : xxx End -->

<br />

<!--SEARCH RESULTS   new { class = "form", style = "padding-bottom: 30px; float: right; margin-bottom: 30px; padding-right: 10px;" })) -->

@using (Html.BeginForm("Index", "BlogPosts", FormMethod.Get, htmlAttributes: new { @class = "form" }))
{
    <div class="controls controls-row search-row">
        <input id="searchStr" name="searchStr" class="input-block-level" type="text"
               placeholder="Search">
        <button id="searchStr" name="searchStr" class="btn btn-success" type="submit">
            <i class="fa fa-search"></i>
        </button>
    </div>
}

<br /><br />

    <p>
        @Html.ActionLink("Create New BlogPost", "Create", "Blogposts", null, htmlAttributes: new { @class = "btn btn-success btn-block" })
    </p>
<br />  


    <!--Will Need to Change the below due to no longer using IEnumerable. Need to use paged lists-->
    <table class="table">


        <tr>
            <th>
                Created
                @*@Html.DisplayNameFor(model => model.Created)*@
            </th>

            <th>
                Title
                @*@Html.DisplayNameFor(model => model.Title)*@
            </th>
            <th>
                Slug
                @*@Html.DisplayNameFor(model => model.Slug)*@
            </th>
            <th>
                Body
                @*@Html.DisplayNameFor(model => model.Body)*@
            </th>
            <th>
                MediaURL
                @*@Html.DisplayNameFor(model => model.MediaURL)*@
            </th>
            <th>
                Published
                @*@Html.DisplayNameFor(model => model.Published)*@
            </th>
            <th></th>
        </tr>
        




        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Created)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Slug)
                </td>
                <td>
                       
                    @Html.Raw(item.Body)

                  
                </td>
                <td>
                
                    @if (item.MediaURL != null)
                    {
                        <div class="col-md-2">
                            <img class="img-responsive" src="@Url.Content(item.MediaURL)" alt="" style="display: block;  max-width:100px;  max-height:100px;   width: auto;  height: auto;" />
                        </div>
                    }
                    else
                    {
                        <a href="#">No Image</a>
                    }

                    
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Published)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { Slug = item.Slug }) <!--Changed slug to Slug-->
                    @*@Html.ActionLink("Details", "Details", new { id=item.Id })*@ |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
        }

    </table>

<hr />



<p>
    @Html.ActionLink("Create New BlogPost", "Create", "Blogposts", null, htmlAttributes: new { @class = "btn btn-success btn-block" })
</p>
<br />

<!--Need for Paged List-->
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount	@Html.PagedListPager(Model, page => Url.Action("Index", new {page, searchStr=ViewBag.Search}))