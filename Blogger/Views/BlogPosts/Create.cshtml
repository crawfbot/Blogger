@model Blogger.Models.BlogPost



<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
</head>
<body>

    <!-- Section : xxx Start -->
    <div class="section dark page-header" style="background: url('/Media/redbluecosmosinvert.jpg'); background-size: cover;">
        <div class="bg image overlay"></div>
        <div class="section-container">
            <div class="section-body">
                <div class="container">
                    <h1 style="color: white;">Blog : <small style="color: #dedede;">Share Your Thoughts!</small></h1>

               
                </div>
            </div>
        </div>
    </div>
    <!-- // Section : xxx End -->

    <br />

 
    
    
    @using (Html.BeginForm("Create", "BlogPosts", FormMethod.Post, new { enctype = "Multipart/form-data" }))
    
    {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
            <h4>Create A New BlogPost</h4>
            <hr />
            @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Created, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Created, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Created, "", new { @class = "text-danger" })
                </div>
            </div>*@
    
            @*<div class="form-group">
                @Html.LabelFor(model => model.Updated, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Updated, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Updated, "", new { @class = "text-danger" })
                </div>
            </div>*@
    
            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>
    
            @*<div class="form-group">
                @Html.LabelFor(model => model.Slug, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Slug, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Slug, "", new { @class = "text-danger" })
                </div>
            </div>*@
    
            <div class="form-group">
                @Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Body, new { htmlAttributes = new { @class = "form-control cr", rows = "5" } })
                    @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.MediaURL, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    <input type="file" name="file" class="form-control" id="fileUpload" />

                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Published, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Published)
                        @Html.ValidationMessageFor(model => model.Published, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
    
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
    
    @section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
        <script src="~/Scripts/tinymce/tinymce.js"></script>
        <script src="~/Scripts/tinymce/jquery.tinymce.min.js"></script>
        <script>
       $(function () {
           $('.cr').tinymce({});
       })
        </script>


    }


    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</body>
</html>
